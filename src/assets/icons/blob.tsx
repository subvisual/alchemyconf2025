import { SVGProps } from "react";

interface BlobProps extends SVGProps<SVGSVGElement> {
  className?: string;
  text?: string;
  textColor?: string;
  textSize?: string;
  stroke?: string;
  variant?: 1 | 2 | 3 | 4 | 5;
}

const Blob = ({
  className,
  text,
  textColor = "#003049",
  textSize = "22px",
  stroke = "#7D1D3F",
  variant = 1,
  ...props
}: BlobProps) => {
  const blobs = {
    1: {
      path: "M63.921 152.071C73.9136 138.57 70.7083 115.824 84.9397 106.886C100.009 97.4226 125.168 118.243 137.773 105.691C162.653 80.9155 150.004 27.1608 181.207 11.0243C203.552 -0.53136 227.337 32.1702 244.706 50.3904C260.26 66.7064 257.863 95.5946 275.369 109.801C299.127 129.08 344.027 117.343 359.625 143.646C373.279 166.669 341.802 194.082 341.207 220.819C340.502 252.494 381.657 295.321 355.841 313.704C322.879 337.176 277.49 298.162 237.11 294.943C220.577 293.626 203.492 293.939 188.205 300.343C167.067 309.198 153.906 346.333 132.211 338.888C109.577 331.121 127.469 285.164 107.149 272.528C82.4663 257.178 43.9619 287.47 20.9595 269.705C2.63979 255.555 7.08275 223.074 15.0109 201.365C23.0371 179.389 50.0002 170.878 63.921 152.071Z",
      viewBox: " 0 0 373 348",
      textPosition: { x: "50%", y: "59%" },
    },
    2: {
      path: "M262.765 244.261C254.982 276.606 290.501 316.365 269.971 342.576C254.207 362.702 220.319 335.564 195.419 330.244C175.75 326.041 151.914 328.767 137.907 314.357C122.721 298.734 139.172 261.827 119.602 252.246C88.1067 236.826 43.1108 275.843 15.3918 254.374C-4.51212 238.958 25.6707 205.478 26.6329 180.239C27.5852 155.26 9.34439 128.457 21.0365 106.321C32.8508 83.9534 61.1737 74.215 85.7328 68.3487C107.692 63.1033 132.001 84.9254 152.289 74.9689C178.485 62.113 179.076 13.2058 207.825 8.43102C232.119 4.39605 246.09 38.3536 262.461 56.6708C276.048 71.8734 280.376 93.9416 295.978 107.063C318.344 125.875 370.487 119.531 372.002 148.799C373.649 180.615 325.441 190.936 301.407 211.939C288.622 223.112 266.735 227.764 262.765 244.261Z",
      viewBox: " 0 0 381 358",
      textPosition: { x: "50%", y: "50%" }, // NOTE: not tested, may need adjustments
    },
    3: {
      path: "M198.317 38.098C223.335 38.3635 243.935 1.77625 267.356 10.632C290.061 19.2172 285.88 55.0786 298.446 75.9585C308.636 92.8918 323.437 105.786 334.48 122.169C348.271 142.629 385.712 164.561 371.992 185.069C353.078 213.343 301.199 189.711 274.917 211.208C260.238 223.215 278.131 249.881 271.134 267.569C262.751 288.762 253.735 320.649 231.108 321.961C206.358 323.396 197.759 284.765 175.847 273.094C160.998 265.186 142.32 271.825 126.467 266.23C108.054 259.73 92.1017 248.79 75.9165 237.822C52.4599 221.926 5.92208 214.989 9.12227 186.711C12.8069 154.153 68.4071 156.773 88.0466 130.637C99.8054 114.988 88.5003 91.4055 94.7126 72.8088C102.42 49.7373 105.681 16.8475 128.627 9.1597C152.733 1.08324 172.911 37.8284 198.317 38.098Z",
      viewBox: " 0 0 383 330",
      textPosition: { x: "50%", y: "50%" }, // NOTE: not tested, may need adjustments
    },
    4: {
      path: "M222.333 47.1625C249.343 44.5254 266.367 3.8751 293.136 8.34263C317.045 12.333 321.943 46.6163 336.289 66.1811C348.609 82.9817 357.545 101.957 372.451 116.505C393.977 137.515 429.666 144.12 443.518 170.835C456.464 195.804 458.31 230.301 444.01 254.519C428.635 280.559 389.04 280.112 366.864 300.655C348.929 317.27 347.483 347.46 327.895 362.084C308.288 376.722 281.366 388.954 257.919 381.991C230.855 373.955 222.09 337.617 197.681 323.418C182.246 314.438 162.903 316.818 145.058 316.335C114.064 315.495 74.1011 342.14 52.8869 319.496C33.1457 298.425 74.1231 263.488 68.9229 235.068C64.3658 210.163 34.8109 196.924 26.109 173.151C16.191 146.056 -2.13841 111.152 15.0983 88.025C34.1613 62.4476 78.1126 78.1748 106.979 64.6456C126.976 55.2733 134.854 24.9736 156.684 21.6651C180.091 18.1177 198.772 49.4629 222.333 47.1625Z",
      viewBox: " 0 0 462 392",
      textPosition: { x: "50%", y: "50%" }, // NOTE: not tested, may need adjustments
    },
    5: {
      path: "M248.925 69.109C281.808 67.9162 295.362 12.7348 328.261 12.1409C355.091 11.6565 371.902 44.0085 386.38 66.6276C400.06 87.9995 400.255 114.641 409.098 138.43C418.316 163.228 453.524 187.951 439.907 210.628C422.268 240.003 371.359 224.451 344.604 245.835C329.754 257.702 339.623 284.607 328.263 299.855C316.293 315.923 299.284 332.599 279.283 333.513C258.494 334.464 245.491 303.487 224.709 304.589C193.631 306.238 170.785 338.108 139.79 340.914C98.9596 344.611 38.9025 359.299 19.4405 323.175C-0.383563 286.38 71.2154 251.214 68.9714 209.468C66.8949 170.839 10.0315 150.831 8.09954 112.195C6.31916 76.59 28.6139 37.5343 59.4856 19.7672C92.3968 0.826447 135.371 8.23633 172.109 17.8053C202.227 25.6498 217.825 70.2372 248.925 69.109Z",
      viewBox: " 0 0 452 355",
      textPosition: { x: "50%", y: "50%" }, // NOTE: not tested, may need adjustments
    },
  };
  const currentBlob = blobs[variant];

  return (
    <svg
      className={`${className}`}
      viewBox={currentBlob.viewBox}
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
      {...props}
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d={currentBlob.path}
        fill="#C4C4C4"
        stroke={stroke}
        strokeWidth="16"
      />

      {text && (
        <text
          x={currentBlob.textPosition.x}
          y={currentBlob.textPosition.y}
          textAnchor="middle"
          fill={textColor}
          fontSize={textSize}
          className="font-zilla_slab text-[36px] font-semibold uppercase"
        >
          {text}
        </text>
      )}
    </svg>
  );
};

export default Blob;
