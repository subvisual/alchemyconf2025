"use client";

import { SVGProps, useState, useEffect } from "react";
import { useSpring, animated, useSpringRef } from "@react-spring/web";
import { interpolate } from "flubber";

interface TeatroBlobProps extends SVGProps<SVGSVGElement> {
  className?: string;
  src: string;
  alt: string;
  width: string;
  height: string;
}

const TeatroBlobAnime2 = ({
  className,
  src,
  alt,
  width,
  height,
  ...props
}: TeatroBlobProps) => {
  const [hovered, setHovered] = useState(false);
  const animationRef = useSpringRef();

  const path1 =
    "M443.739 28.4373C648.596 18.6793 757.019 -14.6924 845.458 7.43535C899.42 20.9369 955.271 117.957 968.372 236.464C976.775 312.474 952.036 519.324 908.414 574.51C845.958 653.523 740.032 603.514 547.666 619.016C439.905 627.7 199.909 713.028 107.474 675.522C-18.2713 624.501 23.5334 487.997 40.5215 386.984C55.2389 299.473 -39.9259 147.451 20.0336 69.4427C107.474 -44.3188 313.3 34.6505 443.739 28.4373Z";
  const path2 =
    "M473.095 3.2248C678.076 -6.53403 795.564 3.22327 876.056 69.3599C921.644 106.817 981.546 191.267 954.049 307.292C924.639 431.388 973.995 508.336 924 557.848C808.136 672.589 570.086 672.373 413.601 633.864C308.558 608.015 200.121 633.864 117.129 598.857C27.899 561.217 17.1393 473.829 2.6403 372.807C-9.72228 286.67 20.1572 147.634 117.129 69.3599C209.639 8.10288 342.578 9.43853 473.095 3.2248Z";
  const path3 =
    "M397.065 40.6952C602.153 30.9411 697.194 -45.7821 816.245 40.6953C863.99 75.3765 988.209 146.175 1001.32 264.636C1009.74 340.616 999.824 500.573 949.802 550.061C833.878 664.747 810.243 700.023 639.67 710.52C531.643 717.168 417.574 652.534 236.496 652.534C100.937 652.534 20.9035 587.551 6.3968 486.578C-5.97229 400.483 -9.10956 242.257 80.429 147.668C150.46 73.6877 266.479 46.9059 397.065 40.6952Z";
  const path4 =
    "M507.305 0.0244763C720.38 0.0250431 901.468 -3.35325 964.967 69.0539C1014.64 125.702 1059 222.904 1059 342.17C1059 473.469 1054.5 589.244 964.967 619.044C810.201 670.556 693.977 598.327 532.814 671.31C384.261 738.582 229.38 650.455 142.175 619.044C45.6411 584.273 18.4068 465.462 3.6267 367.681C-15.8807 238.626 45.1596 165.352 142.175 87.0624C198.214 41.8412 376.581 0.0241286 507.305 0.0244763Z";

  const interpolator = interpolate(path1, path2);

  const { x } = useSpring({
    ref: animationRef,
    to: async (next) => {
      while (true) {
        await next({ x: 1, config: { duration: 2000 } });
        await next({ x: 0, config: { duration: 2000 } });
        // await next({ x: 2, config: { duration: 2000 } });
        // await next({ x: 3, config: { duration: 2000 } });
        // await next({ x: 1, config: { duration: 2000 } });
        // await next({ x: 2, config: { duration: 2000 } });
      }
    },
    // to: [
    //   { x: 1, config: { duration: 2000 } },
    //   // { x: 2, config: { duration: 2000 } },
    //   { x: 0, config: { duration: 4000 } },
    //   { x: 1, config: { duration: 2000 } },
    //   // { x: 2, config: { duration: 2000 } },
    //   // { x: 0, config: { duration: 4000 } },
    // ],
    from: { x: 0 },
    loop: { reverse: false },
  });
  const { scale } = useSpring({
    scale: hovered ? 0.95 : 0.9,
    config: { tension: 300, friction: 200 },
  });

  useEffect(() => {
    if (!hovered) {
      animationRef.stop();
      // animationRef.start({ x: 0, loop: false, config: { duration: 1000 } });
    } else {
      animationRef.start();
    }
  }, [hovered, animationRef]);

  return (
    <div
      className="absolute overflow-visible"
      style={{
        width,
        height,
        position: "relative",
      }}
      onMouseEnter={() => setHovered(true)}
      onMouseLeave={() => setHovered(false)}
    >
      <svg
        width="1060"
        height="712"
        viewBox="0 0 1060 712"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={{
          position: "absolute",
          maxHeight: "100%",
          maxWidth: "100%",
        }}
        {...props}
      >
        <mask id="theatroMask">
          <animated.path fill="white" d={x.to((x) => interpolator(x))} />
        </mask>
        {/* <defs> */}
        {/*   <clipPath id="myClipPath"> */}
        {/*     <animated.path */}
        {/*       d={x.to({ */}
        {/*         range: [0, 1], */}
        {/*         output: [ */}
        {/*           // // blob path1 */}
        {/*           // "M404.196 56.8752C501.503 20.7322 595.006 -0.179877 676.797 2.37152C758.546 4.92164 828.48 30.8994 878.944 88.4396C926.279 142.411 936.651 176.577 932.197 211.45C929.95 229.045 923.918 246.924 916.649 267.823C916.287 268.864 915.922 269.912 915.554 270.968C908.558 291.06 900.612 313.879 894.054 341.54C886.622 372.887 887.714 404.14 891.496 433.937C893.387 448.836 895.955 463.399 898.475 477.43C898.651 478.407 898.826 479.381 899.001 480.352C901.339 493.354 903.59 505.872 905.191 517.832C908.638 543.585 909.006 566.369 900.941 585.255C892.933 604.005 876.45 619.259 845.368 629.603C768.483 655.192 688.487 648.628 607.302 638.873C598.836 637.856 590.356 636.804 581.866 635.75C509.079 626.72 435.525 617.594 363.174 629.528C309.83 638.327 254.269 645.168 203.727 641.858C153.186 638.548 107.907 625.102 74.8813 593.555C5.49554 527.276 -10.8873 435.036 22.3813 342.679C30.4228 320.355 30.7125 295.393 28.2608 269.48C27.0339 256.512 25.1142 243.255 23.1123 229.932C22.8579 228.239 22.6021 226.545 22.3463 224.851C20.5866 213.194 18.8222 201.505 17.4461 189.872C11.142 136.58 13.1004 85.2846 60.6737 46.8522C118.808 7.36436 173.314 20.8589 229.192 38.9961C233.768 40.4811 238.353 41.9982 242.951 43.5194C294.334 60.5191 347.251 78.0265 404.196 56.8752Z", */}
        {/*           // // blob path 2 */}
        {/*           // "M434.006 23.6901C533.483 49.0424 640.786 37.9191 731.337 28.5323C734.918 28.1611 738.473 27.7925 742.001 27.4291C788.445 22.6436 830 18.7455 863.464 21.0053C896.98 23.2685 921.774 31.6753 935.367 50.9063C968.699 98.0649 969.037 143.053 965.378 191.482C964.926 197.469 964.412 203.51 963.892 209.614C960.213 252.848 956.266 299.239 972.084 351.829C1000.55 446.458 1007.42 519.019 992.383 574.163C977.388 629.144 940.525 667.099 880.72 692.41C806.82 723.688 742.101 722.28 675.564 712.529C655.494 709.587 635.218 705.876 614.463 702.078C566.512 693.301 516 684.056 459.546 682.752C418.595 681.807 375.223 687.236 332.058 694.016C318.869 696.088 305.706 698.284 292.636 700.465C262.863 705.434 233.566 710.322 205.507 713.478C124.638 722.574 55.4564 717.079 16.6657 658.647C6.48579 643.313 2.29813 625.069 1.7751 604.421C1.25161 583.755 4.401 560.817 8.78139 536.186C10.4428 526.844 12.2819 517.26 14.1595 507.475C22.156 465.803 30.8513 420.489 29.4988 374.695C28.668 346.563 25.5294 320.081 22.4594 294.936C22.3385 293.946 22.2177 292.958 22.0973 291.973C19.1533 267.889 16.3629 245.061 15.7891 223.044C14.5976 177.323 22.9691 135.27 59.5037 93.5708C154.198 -14.5083 301.972 -9.95948 434.006 23.6901Z", */}
        {/*           // // blob path3 */}
        {/*           // "M476.459 16.9465C525.008 5.49397 597.918 -1.98448 670.49 6.11268C743.099 14.2141 815.038 37.8677 862.036 88.3625C892.044 120.603 922.68 174.663 945.817 235.629C968.948 296.576 984.5 364.204 984.5 423.5C984.5 475.012 965.55 523.245 938.798 561.542C912.026 599.867 877.573 628.055 846.796 639.628C770.606 668.275 714.561 680.961 663.153 683.898C611.732 686.835 564.835 680.028 506.856 669.532C463.251 661.638 426.027 668.652 385.717 676.247C376.41 678.001 366.938 679.786 357.185 681.425C305.138 690.175 244.442 694.974 156.555 669.578C133.816 663.008 119.69 650.432 110.09 633.769C100.428 616.999 95.3195 596.045 90.8228 572.665C89.7609 567.145 88.7346 561.493 87.6898 555.74C79.9235 512.972 71.1332 464.566 39.0933 422.292C-12.2968 354.486 -16.0021 240.665 68.1034 127.694C104.429 78.9013 174.215 58.5936 251.501 46.8434C282.337 42.1552 314.232 38.8444 345.524 35.5962C353.376 34.7812 361.189 33.9701 368.938 33.1422C407.529 29.0194 444.526 24.4791 476.459 16.9465Z", */}
        {/*           // // blob path4 */}
        {/*           // "M404.196 57.1311C501.503 20.9881 595.006 0.075982 676.797 2.62738C758.546 5.1775 828.48 31.1553 878.944 88.6954C926.279 142.667 936.651 176.833 932.197 211.706C929.95 229.301 923.918 247.18 916.649 268.078C916.287 269.12 915.922 270.168 915.554 271.224C908.558 291.316 900.612 314.135 894.054 341.796C886.622 373.143 887.714 404.396 891.496 434.193C893.387 449.092 895.955 463.655 898.475 477.686C898.651 478.663 898.826 479.637 899.001 480.608C901.339 493.61 903.59 506.128 905.191 518.088C908.638 543.841 909.006 566.625 900.941 585.51C892.933 604.261 876.45 619.515 845.368 629.859C768.483 655.448 688.487 648.883 607.302 639.129C598.836 638.112 590.356 637.06 581.866 636.006C509.079 626.976 435.525 617.85 363.174 629.784C309.83 638.583 254.269 645.424 203.727 642.114C153.186 638.804 107.907 625.358 74.8813 593.811C5.49554 527.532 -10.8873 435.292 22.3813 342.935C30.4228 320.611 30.7125 295.648 28.2608 269.735C27.0339 256.768 25.1142 243.511 23.1123 230.188C22.8579 228.495 22.6021 226.801 22.3463 225.107C20.5866 213.449 18.8222 201.761 17.4461 190.128C11.142 136.836 13.1004 85.5405 60.6737 47.1081C118.808 7.62022 173.314 21.1147 229.192 39.252C233.768 40.7369 238.353 42.2541 242.951 43.7752C294.334 60.7749 347.251 78.2823 404.196 57.1311Z", */}
        {/*           // blob1 */}
        {/*           // "M450.096 48.4977C530.991 44.6477 596.894 37.1217 652.41 30.7821C667.29 29.0828 681.424 27.4688 694.9 26.0336C758.728 19.2362 807.65 16.4748 851.516 27.4411C877.682 33.9825 904.796 60.9776 927.081 101.59C949.304 142.089 966.484 195.707 973.013 254.72C977.189 292.46 973.132 362.962 962.548 431.001C957.259 464.996 950.352 498.306 942.056 526.534C933.741 554.826 924.094 577.784 913.433 591.261C882.797 629.985 841.532 637.252 783.275 636.565C766.36 636.366 748.019 635.494 728.141 634.548C679.713 632.245 622.157 629.507 553.841 635.008C526.728 637.191 491.374 644.181 452.257 652.813C437.737 656.017 422.701 659.447 407.36 662.946C381.302 668.89 354.365 675.034 327.592 680.612C285.075 689.47 243.113 696.87 206.035 699.72C168.897 702.575 136.931 700.841 114.252 691.647C83.1397 679.033 62.5108 661.194 49.2506 640.041C35.9745 618.863 29.9956 594.22 28.4357 567.877C25.9796 526.398 34.4704 481.122 42.3657 439.022C44.5252 427.507 46.6401 416.229 48.4743 405.332C52.2217 383.068 48.9604 356.853 43.0301 329.028C39.3172 311.607 34.5184 293.396 29.6805 275.037C26.7988 264.102 23.9033 253.113 21.2151 242.208C13.9883 212.891 8.21886 184.032 7.96113 157.691C7.70357 131.367 12.9527 107.741 27.585 88.7195C70.6639 32.7192 143.05 23.9293 221.744 28.671C253.395 30.5782 285.909 34.6605 317.787 38.6631C325.485 39.6296 333.145 40.5914 340.747 41.5168C379.774 46.2676 417.275 50.0598 450.096 48.4977Z", */}
        {/*           // blob2 */}
        {/*           "M473.595 23.9992C678.712 14.237 795.411 24.1042 875.231 89.6674C920.436 126.799 979.824 210.51 952.554 325.54C939.077 382.388 942.054 429.419 944.512 468.247C944.751 472.019 944.984 475.714 945.198 479.333C947.617 520.355 947.323 551.042 923.041 575.081C865.57 631.977 777.616 660.516 684.257 669.968C590.942 679.416 492.529 669.761 414.478 650.56C366.187 638.68 317.194 637.672 270.505 636.712C266.158 636.622 261.83 636.534 257.525 636.436C206.866 635.291 159.376 632.99 118.277 615.659C74.2391 597.089 49.5782 566.295 34.0802 527.523C19.1546 490.183 12.7615 445.546 5.84948 397.286C5.56066 395.27 5.27093 393.247 4.97963 391.218C-1.15447 348.492 3.18455 292.521 21.1468 237.485C39.0967 182.486 70.6042 128.562 118.683 89.7377C164.562 59.3924 220.556 44.4839 281.509 36.4077C329.526 30.0454 380.468 27.9382 431.847 25.8128C445.748 25.2378 459.68 24.6614 473.595 23.9992Z", */}
        {/*           // // blob3 */}
        {/*           // "M397.594 43.4966C468.562 40.119 526.525 28.7023 576.672 18.825C599.03 14.4213 619.834 10.3236 639.545 7.38066C703.508 -2.16944 756.406 0.289894 815.323 43.1167C820.951 47.2073 827.605 51.7779 834.991 56.8512C859.137 73.4364 891.104 95.3944 920.599 123.52C959.082 160.218 993.03 207.137 999.511 265.718C1003.7 303.537 1003.33 362.371 995.671 417.913C991.844 445.677 986.203 472.561 978.428 495.553C970.639 518.582 960.769 537.521 948.592 549.577C940.651 557.438 933.149 564.921 926.007 572.044C880.933 616.999 850.231 647.62 814.472 668.605C773.173 692.841 725.017 704.261 639.877 709.504C590.066 712.571 538.93 700.366 480.016 686.303C475.505 685.227 470.949 684.139 466.344 683.047C401.687 667.708 327.744 651.498 237 651.498C169.558 651.498 116.137 635.323 77.8198 606.77C39.531 578.238 16.1602 537.232 8.97922 487.214C2.81533 444.281 -1.04287 383.384 7.78077 321.467C16.6064 259.536 38.0921 196.77 82.4528 149.874C151.883 76.4772 267.147 49.705 397.594 43.4966Z", */}
        {/*           // // blob4 */}
        {/*           "M500.5 2.49908C509.65 2.4991 518.74 2.49292 527.763 2.48678C623.812 2.42146 712.273 2.36129 785.117 9.84771C824.951 13.9416 860.023 20.2845 889.05 30.0792C918.084 39.8758 940.942 53.0822 956.496 70.8179C1005.83 127.072 1050 223.763 1050 342.499C1050 408.165 1048.86 469.656 1036.62 518.437C1024.4 567.146 1001.21 602.765 957.368 617.358C886.546 640.929 823.865 638.452 760.835 635.961C755.385 635.745 749.932 635.53 744.471 635.331C675.879 632.834 606.168 633.002 525.175 669.677C451.497 703.04 376.178 697.911 308.251 680.431C261.835 668.486 219.132 650.868 182.74 635.853C165.757 628.846 150.149 622.406 136.178 617.374C88.6205 600.245 58.0157 562.394 37.4286 516.429C16.831 470.44 6.36139 416.544 -1.02206 367.7C-10.7107 303.608 -0.39245 253.503 24.3116 209.704C49.0584 165.828 88.312 128.147 136.756 89.0565C150.521 77.9493 171.942 66.9505 198.507 56.7025C225.039 46.4672 256.573 37.0294 290.464 28.9947C358.258 12.9231 435.346 2.4989 500.5 2.49908Z", */}
        {/*           // // blob path4 */}
        {/*           // "M476.459 16.9465C525.008 5.49397 597.918 -1.98448 670.49 6.11268C743.099 14.2141 815.038 37.8677 862.036 88.3625C892.044 120.603 922.68 174.663 945.817 235.629C968.948 296.576 984.5 364.204 984.5 423.5C984.5 475.012 965.55 523.245 938.798 561.542C912.026 599.867 877.573 628.055 846.796 639.628C770.606 668.275 714.561 680.961 663.153 683.898C611.732 686.835 564.835 680.028 506.856 669.532C463.251 661.638 426.027 668.652 385.717 676.247C376.41 678.001 366.938 679.786 357.185 681.425C305.138 690.175 244.442 694.974 156.555 669.578C133.816 663.008 119.69 650.432 110.09 633.769C100.428 616.999 95.3195 596.045 90.8228 572.665C89.7609 567.145 88.7346 561.493 87.6898 555.74C79.9235 512.972 71.1332 464.566 39.0933 422.292C-12.2968 354.486 -16.0021 240.665 68.1034 127.694C104.429 78.9013 174.215 58.5936 251.501 46.8434C282.337 42.1552 314.232 38.8444 345.524 35.5962C353.376 34.7812 361.189 33.9701 368.938 33.1422C407.529 29.0194 444.526 24.4791 476.459 16.9465Z", */}
        {/*           // "M404.196 57.1311C501.503 20.9881 595.006 0.075982 676.797 2.62738C758.546 5.1775 828.48 31.1553 878.944 88.6954C926.279 142.667 936.651 176.833 932.197 211.706C929.95 229.301 923.918 247.18 916.649 268.078C916.287 269.12 915.922 270.168 915.554 271.224C908.558 291.316 900.612 314.135 894.054 341.796C886.622 373.143 887.714 404.396 891.496 434.193C893.387 449.092 895.955 463.655 898.475 477.686C898.651 478.663 898.826 479.637 899.001 480.608C901.339 493.61 903.59 506.128 905.191 518.088C908.638 543.841 909.006 566.625 900.941 585.51C892.933 604.261 876.45 619.515 845.368 629.859C768.483 655.448 688.487 648.883 607.302 639.129C598.836 638.112 590.356 637.06 581.866 636.006C509.079 626.976 435.525 617.85 363.174 629.784C309.83 638.583 254.269 645.424 203.727 642.114C153.186 638.804 107.907 625.358 74.8813 593.811C5.49554 527.532 -10.8873 435.292 22.3813 342.935C30.4228 320.611 30.7125 295.648 28.2608 269.735C27.0339 256.768 25.1142 243.511 23.1123 230.188C22.8579 228.495 22.6021 226.801 22.3463 225.107C20.5866 213.449 18.8222 201.761 17.4461 190.128C11.142 136.836 13.1004 85.5405 60.6737 47.1081C118.808 7.62022 173.314 21.1147 229.192 39.252C233.768 40.7369 238.353 42.2541 242.951 43.7752C294.334 60.7749 347.251 78.2823 404.196 57.1311Z", */}
        {/*         ], */}
        {/*       })} */}
        {/*     /> */}
        {/*     , */}
        {/*   </clipPath> */}
        {/* </defs> */}
      </svg>
      <div style={{ mask: "url(#theatroMask)", overflow: "hidden" }}>
        <animated.img
          src={src}
          alt={alt}
          style={{
            width: "100%",
            height: "100%",
            scale,
          }}
        />
      </div>
    </div>
  );
};

export default TeatroBlobAnime2;
